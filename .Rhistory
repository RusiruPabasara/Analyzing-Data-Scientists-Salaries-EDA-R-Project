return('Analytics Engineer')
}else if(grepl('Research scientists',job_title,ignore.case = TRUE)){
return('Reasearch scientists')
}else{
return('Other related jobs')
}
}
df$Main_Title <- sapply(df$job_title,categorize_title)
#Convert to Factors
df$work_year <- as.factor(df$work_year)
df$job_title <- as.factor(df$job_title)
df$Main_Title <- as.factor(df$Main_Title)
df <- mutate(df, Main_Title = factor(Main_Title, levels = names(sort(table(Main_Title))))) #reorder levels of factor ascending order of frequency count
df$employment_type <- as.factor(df$employment_type)
df$experience_level <- as.factor(df$experience_level)
df$remote_ratio <- as.factor(df$remote_ratio)
df$company_size <- as.factor(df$company_size)
summary(df)
ggplot(df, aes(x=work_year))+
geom_bar(fill="blue", width=0.7)+
labs(x="Work Year" ,y="Frequency")+ggtitle("Work year Distribution")+
theme(plot.title = element_text(hjust = 0.5))
df1 <- filter(df, Main_Title != "Other related jobs")#filter out other jobs and create new data frame with most common six job titles
ggplot(df1,aes(x=Main_Title))+
geom_bar(fill="red", width=0.7)+
labs(x="Jobs", y="Frequency")+ggtitle("Most common Data Science field Jobs Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(experience_level))+
geom_bar(fill="green",width = 0.7)+
labs(x="Experience Level", y="Frequency")+ggtitle("Experience level Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(employment_type))+
geom_bar(fill="cyan",width = 0.7)+
labs(x="Employment type", y="Frequency")+ggtitle("Employment type Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(x="",fill=remote_ratio))+geom_bar(width = 0.7)+coord_polar(theta = "y")+
ggtitle("Remote Ratio distribution")+
theme(plot.title = element_text(hjust=0.5))+ scale_fill_manual(values = c("50"= "green","100"="orange","0"="blue"))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
scale_fill_manual(values = c("EX" = "red", "EN" = "yellow", "MI" = "green", "SE" = "orange")) +
ggtitle("Relationship between Experience level and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = remote_ratio, y = salary_in_usd, fill = remote_ratio)) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "yellow", "50" = "green", "100" = "orange")) +
ggtitle("Relationship between Experience level and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
average_salary <- aggregate(salary_in_usd ~ Main_Title, data = df1, FUN = mean)
ggplot(average_salary, aes(x = Main_Title, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "orange") +
labs(x = "Most common job Title", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by Most common six Job Title")+ theme(plot.title = element_text(hjust= 0.5))
average_salary <- aggregate(salary_in_usd ~ work_year, data = df1, FUN = mean)
print(average_salary)
ggplot(average_salary, aes(x = work_year, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "work year", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by each work year")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x = work_year, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "work year", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by each work year")+ theme(plot.title = element_text(hjust= 0.5))
average_salary <- aggregate(salary_in_usd ~ work_year, data = df1, FUN = mean)
print(average_salary)
ggplot(df, aes(x = work_year, y = salary_in_usd)) +
geom_point(color = "green",alpha =0.7) +
labs(x = "work year", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by each work year")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "green",alpha =0.7) +
labs(x = "work year", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by each work year")+ theme(plot.title = element_text(hjust= 0.5))
ANOVA1=aov(salary_in_usd~company_location,data=dataset)
ANOVA1=aov(salary_in_usd~company_location,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
ANOVA1=aov(salary_in_usd~company_size,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
ggplot(df, aes(x = remote_ratio, y = salary_in_usd, fill = remote_ratio)) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "yellow", "50" = "green", "100" = "orange")) +
ggtitle("Relationship between remote ratio and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = remote_ratio, y = salary_in_usd, fill = remote_ratio)) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "yellow", "50" = "green", "100" = "orange")) +
ggtitle("Relationship between remote ratio and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
ANOVA1=aov(salary_in_usd~employement_type,data=df)
df$employment_type <- as.factor(df$employment_type)
ANOVA1=aov(salary_in_usd~employment_type,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
average_salary <- aggregate(salary_in_usd ~employment_type, data = df1, FUN = mean)
print(average_salary)
ggplot(average_salary, aes(x = employment_type, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "orange") +
labs(x = "Most common job Title", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by Most common six Job Title")+ theme(plot.title = element_text(hjust= 0.5))
ANOVA1=aov(salary_in_usd~employment_type,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
library(diplyr)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(dplyr)
contigency table<-table(df$company_location,df$employee_residence)
contigency table <-table(df$company_location,df$employee_residence)
contigency_table <-table(df$company_location,df$employee_residence)
print(contigency_table)
df$employee_residence<-as.factor(df$employee_residence)
df$company_location<-as.factor(df$company_location)
summary(df)
contigency_table <-table(df$company_location,df$employee_residence)
print(contigency_table)
chi_square <- chisq.test(contigency_table)
library(dplyr)
chi_square <- chisq.test(contigency_table)
chi <-chisq.test(contigency_table)
fisher_exact <- fisher.test(contigency_table)
fisher_exact <- fisher.test(contigency_table, simulate.p.value = TRUE)
print(fisher_exact)
chi <-chisq.test(contigency_table)
print(chi_square)
fisher_exact <- fisher.test(contigency_table, simulate.p.value = TRUE)
print(fisher_exact)
contigency_table <-table(df$company_location,df$employee_residence)
fisher_exact <- fisher.test(contigency_table, simulate.p.value = TRUE)
print(fisher_exact)
#Convert to Factors
df$work_year <- as.factor(df$work_year)
df$job_title <- as.factor(df$job_title)
df$Main_Title <- as.factor(df$Main_Title)
df <- mutate(df, Main_Title = factor(Main_Title, levels = names(sort(table(Main_Title))))) #reorder levels of factor ascending order of frequency count
df$employment_type <- as.factor(df$employment_type)
df$experience_level <- as.factor(df$experience_level)
df$remote_ratio <- as.factor(df$remote_ratio)
df$company_size <- as.factor(df$company_size)
df$employee_residence<-as.factor(df$employee_residence)
df$company_location<-as.factor(df$company_location)
summary(df)
df1 <- filter(df, Main_Title != "Other related jobs")#filter out other jobs and create new data frame with most common six job titles
ggplot(df1,aes(x=Main_Title))+
geom_bar(fill="red", width=0.7)+
labs(x="Jobs", y="Frequency")+ggtitle("Most common Jobs Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed",)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth = 30)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth = 30)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "green",alpha =0.7) +
labs(x = "work year", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by each work year")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "blue",alpha =0.3) +
labs(x = "company locationr", y = "employee residence") +
ggtitle("relationship between company location and employy residence")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "blue",alpha =0.8) +
labs(x = "company locationr", y = "employee residence") +
ggtitle("relationship between company location and employy residence")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "blue",alpha =0.8) +
labs(x = "company locationr", y = "employee residence") +
ggtitle("relationship between company location and employy residence")+ theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x =company_location, y = employee_residence)) +
geom_point(color = "blue",alpha =0.8) +
labs(x = "company locationr", y = "employee residence") +
ggtitle("relationship between company location and employy residence")+ theme(plot.title = element_text(hjust= 0.5))
tapply(df$salary_in_usd,df$remote_ratio)
tapply(df$remote_ratio,df$salary_in_usd)
df$remote_ratio <- as.factor(df$remote_ratio)
tapply(df$remote_ratio,df$salary_in_usd)
tapply(df$salary_in_usd,df$remote_ratio)
tapply(df$salary_in_usd,df$remote_ratio,summary)
library(tidyverse)
library(ggplot2)
df <- read.csv("ds_salaries.csv", header = TRUE, sep = ",")
#load the CSV File
dim(df)
head(df)
sum(is.na(df))  #checking the missing values
str(df)
#Categorized job titles to Main job title
categorize_title <-function(job_title){
if (grepl('Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Business Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('BI Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Lead Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Principal Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Lead Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Engineer',job_title,ignore.case = TRUE)){
return('Data Engineer')
}else if(grepl('ML Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Data Architect',job_title,ignore.case = TRUE)){
return('Data Architect')
}else if(grepl('Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Machine Learning Software Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Applied Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Analytics Engineer',job_title,ignore.case = TRUE)){
return('Analytics Engineer')
}else if(grepl('Research scientists',job_title,ignore.case = TRUE)){
return('Reasearch scientists')
}else{
return('Other related jobs')
}
}
df$Main_Title <- sapply(df$job_title,categorize_title)
#Convert to Factors
df$work_year <- as.factor(df$work_year)
df$job_title <- as.factor(df$job_title)
df$Main_Title <- as.factor(df$Main_Title)
df <- mutate(df, Main_Title = factor(Main_Title, levels = names(sort(table(Main_Title))))) #reorder levels of factor ascending order of frequency count
df$employment_type <- as.factor(df$employment_type)
df$experience_level <- as.factor(df$experience_level)
df$remote_ratio <- as.factor(df$remote_ratio)
df$company_size <- as.factor(df$company_size)
df$employee_residence<-as.factor(df$employee_residence)
df$company_location<-as.factor(df$company_location)
summary(df)
ggplot(df, aes(x=work_year))+
geom_bar(fill="blue", width=0.7)+
labs(x="Work Year" ,y="Frequency")+ggtitle("Work year Distribution")+
theme(plot.title = element_text(hjust = 0.5))
df1 <- filter(df, Main_Title != "Other related jobs")#filter out other jobs and create new data frame with most common six job titles
ggplot(df1,aes(x=Main_Title))+
geom_bar(fill="red", width=0.7)+
labs(x="Jobs", y="Frequency")+ggtitle("Most common Jobs Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(experience_level))+
geom_bar(fill="green",width = 0.7)+
labs(x="Experience Level", y="Frequency")+ggtitle("Experience level Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(employment_type))+
geom_bar(fill="cyan",width = 0.7)+
labs(x="Employment type", y="Frequency")+ggtitle("Employment type Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(x="",fill=remote_ratio))+geom_bar(width = 0.7)+coord_polar(theta = "y")+
ggtitle("Remote Ratio distribution")+
theme(plot.title = element_text(hjust=0.5))+ scale_fill_manual(values = c("50"= "green","100"="orange","0"="blue"))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
scale_fill_manual(values = c("EX" = "red", "EN" = "yellow", "MI" = "green", "SE" = "orange")) +
ggtitle("Relationship between Experience level and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = remote_ratio, y = salary_in_usd, fill = remote_ratio)) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "yellow", "50" = "green", "100" = "orange")) +
ggtitle("Relationship between remote ratio and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
average_salary <- aggregate(salary_in_usd ~ Main_Title, data = df1, FUN = mean)
ggplot(average_salary, aes(x = Main_Title, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "orange") +
labs(x = "Most common job Title", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by Most common six Job Title")+ theme(plot.title = element_text(hjust= 0.5))
ANOVA1=aov(salary_in_usd~employment_type,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
contigency_table <-table(df$company_location,df$employee_residence)
fisher_exact <- fisher.test(contigency_table, simulate.p.value = TRUE)
print(fisher_exact)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
df <- read.csv("ds_salaries.csv", header = TRUE, sep = ",")
#load the CSV File
dim(df)
head(df)
library(dplyr)
library(ggplot2)
df <- read.csv("ds_salaries.csv", header = TRUE, sep = ",")
#load the CSV File
dim(df)
head(df)
sum(is.na(df))  #checking the missing values
str(df)
#Categorized job titles to Main job title
categorize_title <-function(job_title){
if (grepl('Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Business Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('BI Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Lead Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Principal Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Lead Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Engineer',job_title,ignore.case = TRUE)){
return('Data Engineer')
}else if(grepl('ML Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Data Architect',job_title,ignore.case = TRUE)){
return('Data Architect')
}else if(grepl('Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Machine Learning Software Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Applied Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Analytics Engineer',job_title,ignore.case = TRUE)){
return('Analytics Engineer')
}else if(grepl('Research scientists',job_title,ignore.case = TRUE)){
return('Reasearch scientists')
}else{
return('Other related jobs')
}
}
df$Main_Title <- sapply(df$job_title,categorize_title)
#Convert to Factors
df$work_year <- as.factor(df$work_year)
df$job_title <- as.factor(df$job_title)
df$Main_Title <- as.factor(df$Main_Title)
df <- mutate(df, Main_Title = factor(Main_Title, levels = names(sort(table(Main_Title))))) #reorder levels of factor ascending order of frequency count
df$employment_type <- as.factor(df$employment_type)
df$experience_level <- as.factor(df$experience_level)
df$remote_ratio <- as.factor(df$remote_ratio)
df$company_size <- as.factor(df$company_size)
df$employee_residence<-as.factor(df$employee_residence)
df$company_location<-as.factor(df$company_location)
summary(df)
ggplot(df, aes(x=work_year))+
geom_bar(fill="blue", width=0.7)+
labs(x="Work Year" ,y="Frequency")+ggtitle("Work year Distribution")+
theme(plot.title = element_text(hjust = 0.5))
df1 <- filter(df, Main_Title != "Other related jobs")#filter out other jobs and create new data frame with most common six job titles
ggplot(df1,aes(x=Main_Title))+
geom_bar(fill="red", width=0.7)+
labs(x="Jobs", y="Frequency")+ggtitle("Most common Jobs Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(experience_level))+
geom_bar(fill="green",width = 0.7)+
labs(x="Experience Level", y="Frequency")+ggtitle("Experience level Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(employment_type))+
geom_bar(fill="cyan",width = 0.7)+
labs(x="Employment type", y="Frequency")+ggtitle("Employment type Distribution")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(df,aes(x="",fill=remote_ratio))+geom_bar(width = 0.7)+coord_polar(theta = "y")+
ggtitle("Remote Ratio distribution")+
theme(plot.title = element_text(hjust=0.5))+ scale_fill_manual(values = c("50"= "green","100"="orange","0"="blue"))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", size = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", size = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
scale_fill_manual(values = c("EX" = "red", "EN" = "yellow", "MI" = "green", "SE" = "orange")) +
ggtitle("Relationship between Experience level and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = remote_ratio, y = salary_in_usd, fill = remote_ratio)) +
geom_boxplot() +
scale_fill_manual(values = c("0" = "yellow", "50" = "green", "100" = "orange")) +
ggtitle("Relationship between remote ratio and Salary (USD) distribution") +
theme(plot.title = element_text(hjust = 0.5))
average_salary <- aggregate(salary_in_usd ~ Main_Title, data = df1, FUN = mean)
ggplot(average_salary, aes(x = Main_Title, y = salary_in_usd)) +
geom_bar(stat = "identity", fill = "orange") +
labs(x = "Most common job Title", y = "Average Salary (USD)") +
ggtitle("Average Salary(USD) by Most common six Job Title")+ theme(plot.title = element_text(hjust= 0.5))
ANOVA1=aov(salary_in_usd~employment_type,data=df)
anova(ANOVA1)
TukeyHSD(ANOVA1)
contigency_table <-table(df$company_location,df$employee_residence)
fisher_exact <- fisher.test(contigency_table, simulate.p.value = TRUE)
print(fisher_exact)
#Categorized job titles to Main job title
categorize_title <-function(job_title){
if (grepl('Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Business Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('BI Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Lead Data Analyst',job_title,ignore.case = TRUE)){
return('Data Analyst')
}else if(grepl('Applied Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Principal Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Lead Data Scientist',job_title,ignore.case = TRUE)){
return('Data Scientist')
}else if(grepl('Data Engineer',job_title,ignore.case = TRUE)){
return('Data Engineer')
}else if(grepl('ML Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Data Architect',job_title,ignore.case = TRUE)){
return('Data Architect')
}else if(grepl('Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Machine Learning Software Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Applied Machine Learning Engineer',job_title,ignore.case = TRUE)){
return('ML Engineer')
}else if(grepl('Analytics Engineer',job_title,ignore.case = TRUE)){
return('Analytics Engineer')
}else if(grepl('Research scientists',job_title,ignore.case = TRUE)){
return('Reasearch scientists')
}else{
return('Other related jobs')
}
}
df$Main_Title <- sapply(df$job_title,categorize_title)
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue")+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth = 10)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth = 60)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth())+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth=0)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth=100000)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
ggplot(df,aes(x=salary_in_usd))+
geom_histogram(fill="blue",binwidth=10000)+geom_vline(xintercept = 100000, color = "red", linetype = "dashed", linewidth = 0.5)+geom_vline(xintercept = 200000, color = "red", linetype = "dashed", linewidth = 0.5)+
labs(x="salary in USD", Y=NULL)+ggtitle("SALARY(USD) Distribution")+
theme(plot.title = element_text(hjust= 0.5))
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(dplyr))
install.packages("tidyverse")
library(dplyr)
library(ggplot2)
install.packages("tidyverse")
install.packages(c("dplyr", "ggplot2"))
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
install.packages("installr")
library(installr)
updateR()
update(R)
update()
updateR()
library(tidyverse)
